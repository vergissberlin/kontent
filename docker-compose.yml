version: "3.7"
services:
  app:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    #build: .
    image: ghcr.io/vergissberlin/kontent:main
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.docker.network=www
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(${DOMAINS})
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=${PORT}
    env_file: .env
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
    networks:
      - default
      - strapi
    depends_on:
      - db

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres
    restart: unless-stopped
    volumes:
      #- ./data/db:/var/lib/postgresql/data
      - ${COMPOSE_PROJECT_NAME}-db:/var/lib/mysq
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
      - default
      - strap

networks:
  strapi:
    name: Strapi
    driver: bridge
  default:
    external:
      name: www

volumes:
  ${COMPOSE_PROJECT_NAME}-db:
    name: ${COMPOSE_PROJECT_NAME}-db
